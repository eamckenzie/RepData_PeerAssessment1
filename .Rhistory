install.packages("swirl")
library("swirl")
install.packages("swirl")
install.packages(c("RCurl", "httr"))
install.packages("RCurl")
install.packages("httr")
install.packages("swirl")
library("swirl")
ls()
swirl()
install_from_swirl("R Programming")
library("swirl")
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="R_Programming")
swirl()
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="Data_Analysis")
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="Getting_and_Cleaning_Data")
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="Mathematical_Biostatistics_Boot_Camp")
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="Open_Intro")
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="Regression_Models")
install_course_zip("/home/alexa/Desktop/Coursera/swirl/swirl_courses-master.zip", multi=TRUE, which_course="Statistical_Inference")
swirl()
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect >=6
my_char<-c("My","name","is")
my_char
paste(my_char, collaps=" ")
paste(my_char, collapse=" ")
my_name<-c(my_char, "...Wait, who am I???")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
library(KernSmooth)
c <- "ברוך הבא , הרפתקן ."
print(c)
swirl
swirl()
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 5)
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flags, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
data(iris)
head(iris)
iris[iris$Species=="virginica",]
vir<- iris[iris$Species=="virginica",]
mean(vir$Sepal.Length)
apply(iris[, 1:4], 2, mean)
mean(iris$Sepal.Length)
data(mtcars)
?mtcars
head(mtcars)
sapply(mtcars, cyl, mean)
mtcars$cyl
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
209.21429 - 82.63636
debug(ls)
ls(mtcars)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
set.seed(1)
rpois(5, 2)
?lattice
?trellis.par.set
library(lattice)
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
str(airquality)
?gzfile
setwd("~/RepData_PeerAssessment1")
activity <- gzfile("activity.zip")
activity[1]
head(activity)
activity
open(activity)
isOpen(activity)
activity
activity <- gzfile("activity.zip", "r")
activity
?cat
read.csv("activity.csv")
read.csv("~/activity.zip/activity.csv")
read.csv("./activity.zip/activity.csv")
read.csv(activity
)
unzip(activity, "activity.csv")
unzip(activity.zip, "activity.csv")
unzip("activity.zip", "activity.csv")
activity.csv
activity <- read.csv("activity.csv")
str(activity)
head(activity)
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
is.na(activity$steps)
?asDate
?as.Date
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
?tapply
sum.daily <- tapply(activity$steps, activity$date, sum)
sum.daily
?sum
sum.daily <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
sum.daily
hist(sum.daily)
hist(sum.daily, main="Steps taken in a day", xlab="Number of Steps")
?hist
hist(sum.daily, main="Steps taken in a day", xlab="Number of Steps", breaks=10, col="gold")
hist(sum.daily, main="Steps taken in a day", xlab="Number of Steps",
breaks=10, col="gold", ylim=c(0,20), xlim=c(0,25000))
?plot
?cex
hist(sum.daily, main="Steps taken in a day", xlab="Number of Steps",
breaks=10, col="gold", ylim=c(0,20), xlim=c(0,25000), cex=.75)
?xlab
?axis
breaks=10, col="gold", ylim=c(0,20), xlim=c(0,25000), cex.axis=.75)
hist(sum.daily, main="Steps taken in a day", xlab="Number of Steps",
breaks=10, col="gold", ylim=c(0,20), xlim=c(0,25000), cex.axis=.75)
hist(sum.daily, main="Steps taken in a day", xlab="Number of Steps",
breaks=10, col="gold", ylim=c(0,20), xlim=c(0,25000), cex.axis=.85)
sum.daily <- tapply(activity$steps, activity$date, sum, na.rm=FALSE)
hist(sum.daily, main="Steps taken per day", xlab="Number of Steps",
breaks=10, col="gold", ylim=c(0,20), xlim=c(0,25000), cex.axis=.85)
mean(sum.daily)
mean(sum.daily, na.rm=TRUE)
median(sum.daily, na.rm=TRUE)
unique(activity$date)
activity[activity$date=="2012-10-01",]
length(activity[activity$date=="2012-10-01",])
sum(is.na(activity[activity$date=="2012-10-01",]))
nrow(activity[activity$date=="2012-10-01",])
?mean
unique(activity$interval)
nrows(activity[activity$interval==1105,])
nrow(activity[activity$interval==1105,])
mean.byinterval <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
mean.byinterval
names(mean.byinterval)
plot(names(mean.byinterval), mean.byinterval, type="l")
activity$interval <- as.Date(activity$interval, "%H%m")
a <- c("0015", "0125", "1220", "1400")
as.Date(a, "%H%m")
a <- as.numeric(c("0015", "0125", "1220", "1400"))
as.Date(a, "%H%m")
a <- as.character(c("0015", "0125", "1220", "1400"))
as.Date(a, "%H%m")
str(activity)
times <- unique(activity$interval)
interval <- unique(activity$interval)
rm(times)
time <- vector()
?vector
time <- vector(mode="character", length=length(interval))
rm(time)
hour <- vector(mode="character", length=length(interval))
minute <- vector(mode="character", length=length(interval))
interval <- unique(activity$interval)
hour <- vector(mode="character", length=length(interval))
minute <- vector(mode="character", length=length(interval))
for(i in 1:length(interval)) {
for(h in 0:23) {
if(times[i] < h*100) {
hour[i] <- as.character(h)
minute[i] <- as.character(times[i] - h*100)
}
}
}
interval <- unique(activity$interval)
hour <- vector(mode="character", length=length(interval))
minute <- vector(mode="character", length=length(interval))
for(i in 1:length(interval)) {
for(h in 0:23) {
if(interval[i] < h*100) {
hour[i] <- as.character(h)
minute[i] <- as.character(times[i] - h*100)
}
}
}
interval <- unique(activity$interval)
hour <- vector(mode="character", length=length(interval))
minute <- vector(mode="character", length=length(interval))
for(i in 1:length(interval)) {
for(h in 0:23) {
if(interval[i] < h*100) {
hour[i] <- as.character(h)
minute[i] <- as.character(interval[i] - h*100)
}
}
}
hour
minute
interval <- unique(activity$interval)
hour <- vector(mode="character", length=length(interval))
minute <- vector(mode="character", length=length(interval))
for(i in 1:length(interval)) {
for(h in 23:0) {
if(interval[i] < h*100) {
hour[i] <- as.character(h)
minute[i] <- as.character(interval[i] - h*100)
}
}
}
hour
as.character(0)
interval <- unique(activity$interval)
hour <- vector(mode="character", length=length(interval))
minute <- vector(mode="character", length=length(interval))
for(i in 1:length(interval)) {
for(h in 23:0) {
if(interval[i] < h*100+100) {
hour[i] <- as.character(h)
minute[i] <- as.character(interval[i] - h*100)
}
}
}
hour
minute
time <- paste(hour, minute, sep=":")
time
minute[minute=="0"]
minute[minute=="0"] <- "00"
minute[minute=="5"] <- "05"
time <- paste(hour, minute, sep=":")
time
time.interval <- cbind(interval, time)
str(time.interval)
interval
time
time.interval <- data.frame(interval, time)
str(time.interval)
activity <- merge(activity, time.interval)
str(activity)
sum(is.na(activity[activity$date=="2012-10-01",]))
mean.byinterval <- tapply(activity$steps, activity$time, mean, na.rm=TRUE)
plot(names(mean.byinterval), mean.byinterval, type="l")
mean.byinterval <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
plot(names(mean.byinterval), mean.byinterval, type="l")
length(mean.byinterval)
length(activity$times)
length(activity$time)
length(time)
str(names(mean.byinterval))
names(mean.byinterval) <- activity$time
names(mean.byinterval) <- time
plot(names(mean.byinterval), mean.byinterval, type="l")
mean.byinterval <- tapply(activity$steps, activity$time, mean, na.rm=TRUE)
mean.byinterval
plot(names(mean.byinterval), mean.byinterval, type="l")
mean.byinterval <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
plot(names(mean.byinterval), mean.byinterval, type="l")
?axis
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE)
axis(2)
axis(2, cex.axis=.85)
axis(1, cex.axis=.85, labels=time)
axis(1, cex.axis=.85, at=names(mean.byinterval), labels=time)
names(mean.byinterval
)
13+12
+12
15+12
27+12
39+12
?seq
seq(13, by=12, length.out=24)
hourly <- seq(13, by=12, length.out=24)
mean.byinterval[hourly]
names(mean.byinterval)[hourly]
time[hourly]
seq(1, by=12, length.out=24)
hourly <- seq(1, by=12, length.out=24)
names(mean.byinterval)[hourly]
time[hourly]
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE)
axis(2, cex.axis=.85)
hourly <- seq(1, by=12, length.out=24)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
12*24
288/72
hourly <- seq(1, by=72, length.out=4)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE)
axis(2, cex.axis=.85)
hourly <- seq(1, by=72, length.out=4)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
hourly <- seq(1, by=72, length.out=5)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
288/6
hourly <- seq(1, by=48, length.out=6)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE)
axis(2, cex.axis=.85)
hourly <- seq(1, by=48, length.out=6)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
axis(1, cex.axis=.85, at=names(mean.byinterval), labels=time[hourly])
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=c(time[hourly], "24:00")
)
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE)
axis(2, cex.axis=.85)
hourly <- seq(1, by=48, length.out=6)
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE, lwd=2, col="gold")
axis(2, cex.axis=.85)
hourly <- seq(1, by=48, length.out=6)
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
mean.byinterval <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE, lwd=2, col="purple")
axis(2, cex.axis=.85)
hourly <- seq(1, by=48, length.out=6)
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE, lwd=2, col="purple4")
axis(2, cex.axis=.85)
hourly <- seq(1, by=48, length.out=6)
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly])
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly], col.axis="purple")
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE, lwd=2, col="purple4")
axis(2, cex.axis=.85)
hourly <- seq(1, by=48, length.out=6, col.axis="seagreen")
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly], col.axis="seagreen")
hourly <- seq(1, by=48, length.out=6, col.axis="seagreen")
plot(names(mean.byinterval), mean.byinterval, type="l", main="Average steps throughout the day",
xlab="Time of Day", ylab="Number of Steps", axes=FALSE, lwd=2, col="purple4")
axis(2, cex.axis=.85, col.axis="seagreen")
hourly <- seq(1, by=48, length.out=6)
hourly[7] <- 288
axis(1, cex.axis=.85, at=names(mean.byinterval)[hourly], labels=time[hourly], col.axis="seagreen")
max(mean.byinterval)
mean.byinterval[mean.byinterval==max(mean.byinterval)]
time[mean.byinterval==max(mean.byinterval)]
